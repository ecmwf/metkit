#!/bin/env python3

import os
import sys
from collections import OrderedDict

import sys
import pymysql

import yaml

def main():
    with pymysql.connect(host="webapps-db-prod", database="param", user="ecmwf_ro", password="ecmwf_ro") as conn:
        with conn.cursor(pymysql.cursors.DictCursor) as cur:
            cur.execute("""
SELECT 
    DISTINCT grib_encoding.param_id as paramId, 
             grib.attribute_value as typeOfStatisticalProcessing 
FROM 
    grib 
    join grib_encoding on grib_encoding.id=grib.encoding_id 
WHERE grib.attribute_id = (select id from attribute where name = \"typeOfStatisticalProcessing\") 
  and grib.attribute_value is not NULL
""")
            rows = cur.fetchall()

    index = OrderedDict()
    keyCol = "paramId"
    for row in rows:
        key = row[keyCol]
        if key not in index:
            index[key] = []
        index[key].append({k: v for k, v in row.items() if k != keyCol})
        
   
    yaml_dump_data = []
    for key, vals in sorted(index.items()):
        # yaml_dump_data.append(dict(paramId=key, typeOfStatisticalProcessing=vals))
        # Dump only paramIds as a list
        yaml_dump_data.append(key)

    with open("statistical-paramids.yaml", "w") as f:
        f.write(
            "# File automatically generated by %s\n# Do not edit\n\n"
            % (os.path.basename(__file__))
        )
        f.write(yaml.safe_dump(yaml_dump_data, default_flow_style=False))


if __name__ == "__main__":
    main()

